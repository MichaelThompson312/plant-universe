{"version":3,"file":"static/webpack/static/development/pages/_app.js.e77514a6e9491c6b6a4a.hot-update.js","sources":["webpack:///./components/Search.js"],"sourcesContent":["import React from 'react';\nimport Downshift, { resetIdCounter } from 'downshift';\nimport Router from 'next/router';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { SearchStyles, DropDownItem, DropDown } from './styles/DropDown';\n\nconst SEARCH_ITEMS_QUERY = gql`\n\tquery SEARCH_ITEMS_QUERY($searchTerm: String!) {\n\t\titems(where: { OR: [{ title_contains: $searchTerm }, { description_contains: $searchTerm }] }) {\n\t\t\tid\n\t\t\timage\n\t\t\ttitle\n\t\t}\n\t}\n`;\n\nfunction routeToItem(item) {\n\tRouter.push({\n\t\tpathname: '/item',\n\t\tquery: {\n\t\t\tid: item.id\n\t\t}\n\t});\n}\n\nclass AutoComplete extends React.Component {\n\tstate = {\n\t\titems: [],\n\t\tloading: false\n\t};\n\t//manually query apollo client\n\tonChange = debounce(async (e, client) => {\n\t\tthis.setState({ loading: true });\n\t\tconst res = await client.query({\n\t\t\tquery: SEARCH_ITEMS_QUERY,\n\t\t\tvariables: { searchTerm: e.target.value }\n\t\t});\n\t\tthis.setState({ items: res.data.items, loading: false });\n\t}, 350);\n\tr;\n\trender() {\n\t\tresetIdCounter();\n\t\treturn (\n\t\t\t<SearchStyles>\n\t\t\t\t<Downshift itemToString={(item) => (item === null ? '' : item.title)} onChange={routeToItem}>\n\t\t\t\t\t{({ getInputProps, getItemProps, isOpen, inputValue, highlightedIndex }) => (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<ApolloConsumer>\n\t\t\t\t\t\t\t\t{(client) => (\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype=\"search\"\n\t\t\t\t\t\t\t\t\t\t{...getInputProps({\n\t\t\t\t\t\t\t\t\t\t\ttype: 'search',\n\t\t\t\t\t\t\t\t\t\t\tplaceholder: 'Search...',\n\t\t\t\t\t\t\t\t\t\t\tid: 'search',\n\t\t\t\t\t\t\t\t\t\t\tclassName: this.state.loading ? 'loading' : '',\n\t\t\t\t\t\t\t\t\t\t\tonChange: (e) => {\n\t\t\t\t\t\t\t\t\t\t\t\te.persist();\n\t\t\t\t\t\t\t\t\t\t\t\tthis.onChange(e, client);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</ApolloConsumer>\n\t\t\t\t\t\t\t{isOpen && (\n\t\t\t\t\t\t\t\t<DropDown>\n\t\t\t\t\t\t\t\t\t{this.state.items.map((item, index) => (\n\t\t\t\t\t\t\t\t\t\t<DropDownItem\n\t\t\t\t\t\t\t\t\t\t\t{...getItemProps({ item })}\n\t\t\t\t\t\t\t\t\t\t\tkey={item.id}\n\t\t\t\t\t\t\t\t\t\t\thighlighted={index === highlightedIndex}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<img width=\"50\" src={item.image} />\n\t\t\t\t\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t\t\t\t\t</DropDownItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t{!this.state.items.length && !this.state.loading && <DropDownItem> </DropDownItem>}\n\t\t\t\t\t\t\t\t</DropDown>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Downshift>\n\t\t\t</SearchStyles>\n\t\t);\n\t}\n}\n\nexport default AutoComplete;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AASA;AACA;AACA;AACA;AACA;AADA;AAFA;AAMA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAAA;AAGA;AACA;AAAA;AAAA;AAFA;AACA;AAHA;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;;;;;;;;AAQA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AARA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AA/BA;AAuCA;;;;AA3DA;AACA;AA6DA;;;;A","sourceRoot":""}